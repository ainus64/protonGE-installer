#!/bin/bash
# Program: ProtonGEInstaller
# version: 0.9.0
# Author: Ainus64 (Mis Juegos En Linux)
# Contacto: ainus64@gmx.com
#
# Dependencias: jq, whiptail, zenity, kdialog
#
# Cosas por arreglar:
#                   [X] Fix para los archivos descargados cancelados.
#                   [X] Fix Carpeta de Steam - ProtonGE no carga enlazandolo a otra carpeta.
#                       Hay que arreglar la ubicación de Proton, una Alternativa es crearla directamente en Steam
#                       y vincular con un enlace la carpeta para Lutris, ya que en Lutris sí funciona la vinculación.
#                   [X] Hay que reescribir el código mejor para ordenarlo, creando un condicional para detectar el escritorio y cargar la GUI.
#                   [X] Hay que reescribir las variables de la descarga, optimizar el código.
#                       Sugerencia: no hace falta añadir la URL a la base de datos, con el nombre de Proton se puede predecir la URl.
#                                   Además de optimizar el código, se mejoraría la velocidad de actualización de la Base de Datos al omitir la URL.
#                                   Con esto se puede incluir el MD5 para las comprobaciónes de los archivos temporales desvargados.
#                   [X] Hay que escribir una funcion que detecte si la versión de ProtonGE que has seleccionado ya está instalado.
#                       En tal caso hay que sugerir si quieres eliminarla para proceder a reinstalarla o Cancelar el proceso.
#                   [ ] Hay que cambiar todos los textos al Inglés para internacionalizarlo.
#                   [ ] 1.0 Finalizar el programa con Zenity
#                   [ ] 1.1 Hay que escribir el código de la interfaz por terminal
#                   [ ] 1.2 Hay que escribir el código para la interfaz de Kdialog
#                   [ ] 1.3 Corrección de Bugs
#
#                   [ ] Arreglar las variables valor, creando una secuencia incremental.

# Variables Globales
    APPVERSION="v0.9.0"
    APPNAME="ProtonGE-installer"
    APPDIR=$(pwd)
    tmp="/tmp"

_checkDep(){
# Carga la Base de datos.
_loadDB

# Detecta Steam
    if [ -d "${HOME}/.steam" ]; then
            echo "LOG: Steam detectado!"
            STEAM="true"
        else
            STEAM="false"
    fi
# Detecta Lutris
    if [ -d "${HOME}/.local/share/lutris" ]; then
            echo "LOG: Lutris detectado!"
            LUTRIS="true"
        else
            LUTRIS="false"
    fi

# Comprueba que jq esté instalado
if [ -f /usr/bin/jq ]; then
        echo "LOG: jq [Ok] Instalado!"
    else
        echo "LOG: jq [ERROR] No se encuentra instalado."
        exit
fi

# Comprueba que Zenity esté instalado
if [[ "${desktop_session}" == "GTK" ]]; then
        if [ -f /usr/bin/zenity ]; then
            echo "LOG: zenity [Ok] Instalado!"
        else
            echo "LOG: jq [ERROR] No se encuentra instalado."
            exit
        fi
elif [[ "${desktop_session}" == "QT" ]]; then
        if [ -f /usr/bin/zenity ]; then
            echo "LOG: kdialog [Ok] Instalado!"
        else
            echo "LOG: kdialog [ERROR] No se encuentra instalado."
            exit
        fi
        
elif [[ "${desktop_session}" == "CLI" ]]; then
        if [ -f /usr/bin/zenity ]; then
            echo "LOG: whiptail [Ok] Instalado!"
        else
            echo "LOG: whiptail [ERROR] No se encuentra instalado."
            exit
        fi
        
else
    echo "LOG: No se ha detectado el escritorio que estas usando."
    echo "LOG: Ejecutando el programa con la interfaz por defecto"
     if [ -f /usr/bin/zenity ]; then
            echo "LOG: zenity [Ok] Instalado!"
            desktop_session="GTK"
        else
            echo "LOG: jq [ERROR] No se encuentra instalado."
            exit
        fi
fi
    # /usr/bin/zenity
}

_loadDB(){
if [ -f db.json ]; then
        echo "LOG: Cargando la Base de datos local..."
        valor0=`jq -r '.ProtonGE[0].release' db.json`
        valor1=`jq -r '.ProtonGE[1].release' db.json`
        valor2=`jq -r '.ProtonGE[2].release' db.json`
        valor3=`jq -r '.ProtonGE[3].release' db.json`
        valor4=`jq -r '.ProtonGE[4].release' db.json`
        valor5=`jq -r '.ProtonGE[5].release' db.json`
        valor6=`jq -r '.ProtonGE[6].release' db.json`
        valor7=`jq -r '.ProtonGE[7].release' db.json`
        valor8=`jq -r '.ProtonGE[8].release' db.json`
        valor9=`jq -r '.ProtonGE[9].release' db.json`
    else
        echo "Cargando la Base de datos de Internet..."
        valor0=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[0].release'`
        valor1=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[1].release'`
        valor2=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[2].release'`
        valor3=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[3].release'`
        valor4=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[4].release'`
        valor5=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[5].release'`
        valor6=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[6].release'`
        valor7=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[7].release'`
        valor8=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[8].release'`
        valor9=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[9].release'`
fi
}

# MENU PRINCIPAL GTK (Gnome, Cinnamon, LXDE or Unknow DE)
_mainMenu(){
    
    if [[ "${desktop_session}" == "GTK" ]]; then
        componente=$(zenity --list --title=" ${APPNAME} - ${APPVERSION} " --height=300 --width=100 --ok-label="Aceptar" --cancel-label="Cancelar" \
                        --text="Bienvenidos a <b>ProtonGE Installer</b>. \n\nSelecciona la versión que quieres instalar" \
                        --radiolist --column="" --column="ProtonGE Release" \
                        1 "${valor0}" 2 "${valor1}" 3 "${valor2}" 4 "${valor3}" 5 "${valor4}" 6 "${valor5}" 7 "${valor6}" 8 "${valor7}" 9 "${valor8}" 10 "${valor9}")
                        ans=$?
                        if [ $ans -eq 0 ]; then
                            Release="${componente}"
                            echo "LOG: Has seleccionado Proton-${Release}"
                                _menu_download
                        else
                            echo "LOG: Cancelado."
                            zenity --question --title=" ${APPNAME} - ${APPVERSION} " --width=250 --text="¿Estas seguro de que quieres SALIR?"
                                ans=$?
                                if [ $ans -eq 0 ]; then
                                        echo "LOG: Has salido del programa."
                                        exit
                                else
                                        echo "No quiere Salir"
                                        _mainMenu
                                fi

                        fi

    elif [[ "${desktop_session}" == "QT" ]]; then
        _mainMenu
    elif [[ "${desktop_session}" == "CLI" ]]; then
        echo "LOG: Modo Terminal!"
        _mainMenu
    else
        echo "LOG: No se ha detectado el escritorio que estas usando."
    fi
} 


_menu_download(){  
    if [[ "${desktop_session}" == "GTK" ]]; then
        if [ -d "${HOME}"/.local/share/Steam/compatibilitytools.d/Proton-"${Release}" ]; then
                # Ejecuta el Menú de desinstalación
                echo "LOG: Proton-${Release} ya se encuentra instalado."
                installedChoice=$(zenity --list --title=" ${APPNAME} - ${APPVERSION} " --height=300 --width=200 --ok-label="Aceptar" --cancel-label="Cancelar" \
                                --text="Ya tienes instalado esta versión de protonGE \n\n ¿Que Deseas hacer?" \
                                --radiolist --column="" --column="Opciones:" \
                                1 "Re-instalar" 2 "Desinstalar" 3 "Regresar y seleccionar otra versión")
                                    ans=$?
                                    if [ $ans -eq 0 ]; then
                                        if [[ "${installedChoice}" == "Re-instalar" ]]; then
                                                rm -rf "${HOME}"/.local/share/Steam/compatibilitytools.d/Proton-"${Release}"
                                                    if [ -f "${HOME}"/.local/share/lutris/runners/wine/Proton-"${Release}"]; then
                                                        rm "${HOME}"/.local/share/lutris/runners/wine/Proton-"${Release}"
                                                    else
                                                        echo ""
                                                    fi
                                        elif [[ "${installedChoice}" == "Desinstalar" ]]; then
                                            rm -rf "${HOME}"/.local/share/Steam/compatibilitytools.d/Proton-"${Release}"
                                            _msgUninstall
                                        elif [[ "${installedChoice}" == "Regresar y seleccionar otra versión" ]]; then
                                            _mainMenu
                                        else
                                            _msgCancel
                                        fi
                                    fi
        else
                # Ejecuta el Menú de descarga
                echo "Descargando" 
                (
                sleep 1
                echo "10"
                echo "#\n\n Preparando la descarga"; sleep 1
                echo "30"
                echo "# Descargando ProtonGE... \n\n Esto puede tardar varios minutos..."; _downloadProton; sleep 1
                echo "50"
                echo "# \n\n Extrayendo ProtonGE..."; _extractProton; sleep 1
                echo "90"
                echo "#\n\n  ¡Descarga Finalizada!"
                echo "100"
                ) |
                downloadProton=$(zenity --progress --title=" ${APPNAME} - ${APPVERSION} " --height=100 --width=300 \
                                --text="\n\n Iniciando..." --percentage=0)

                                ans=$?
                                if [ $ans -eq 0 ]; then
                                    echo "LOG: Descarga Finalizada!"
                                    _menuInstall
                                else
                                    _msgCancel
                                fi
        fi
    
    elif [[ "${desktop_session}" == "QT" ]]; then
            echo ""
                elif [[ "${desktop_session}" == "CLI" ]]; then
        echo ""
    else
        echo "LOG: No se ha detectado el escritorio que estas usando."
    fi
}


_menuInstall(){
if [[ "${desktop_session}" == "GTK" ]]; then
            if [[ ${STEAM} == true ]] && [[ ${LUTRIS} == true ]]; then
                ##########################################
                # Menu Install Steam And Lutris GTK
                installChoice=$(zenity --list --title=" ${APPNAME} - ${APPVERSION} " --height=300 --width=200 --ok-label="Aceptar" --cancel-label="Cancelar" \
                                --text="Elije donde quieres instalarlo ahora." \
                                --checklist --column="" --column="Opciones:" \
                                1 "Steam" 2 "Lutris")
                            ans=$?
                            if [ $ans -eq 0 ]; then
                                _installProton
                            else
                                _msgCancel
                            fi
                # End code Install Steam And Lutris code
                ##########################################
            elif [[ ${STEAM} == true ]] && [[ ${LUTRIS} == false ]]; then
                ##########################################
                # Menu Install Solo Steam GTK
                installChoice=$(zenity --list --title=" ${APPNAME} - ${APPVERSION} " --height=300 --width=200 --ok-label="Aceptar" --cancel-label="Cancelar" \
                                --text="Elije donde quieres instalarlo ahora." \
                                --checklist --column="" --column="Opciones:" \
                                1 "Steam" )
                            ans=$?
                            if [ $ans -eq 0 ]; then
                                _installProton
                            else
                                _msgCancel
                            fi
                # End code Install Solo Steam
                ##########################################

            elif [[ ${STEAM} = false ]] && [[ ${LUTRIS} = true ]]; then
                ##########################################
                # Menu Install Solo Steam GTK
                installChoice=$(zenity --list --title=" ${APPNAME} - ${APPVERSION} " --height=300 --width=200 --ok-label="Aceptar" --cancel-label="Cancelar" \
                                --text="Elije donde quieres instalarlo ahora." \
                                --checklist --column="" --column="Opciones:" \
                                1 "Lutris" )
                            ans=$?
                            if [ $ans -eq 0 ]; then
                                _installProton
                            else
                                _msgCancel
                            fi
                # End code Install Solo Steam
                ##########################################
            else
                _msgNoSteam
            fi
            # End Installer Code
            ####################################################       
elif [[ "${desktop_session}" == "QT" ]]; then
        ####################################################################
        # kdialog QT
        echo ""
        # End Kdialog QT
        ####################################################################
elif [[ "${desktop_session}" == "CLI" ]]; then
        ####################################################################
        # Dialog CLI        
        echo ""
        # End Dialog CLI
        ####################################################################
else
    echo "LOG: No se ha detectado el escritorio que estas usando."
fi
} 

_downloadProton(){
    if [ -d "${tmp}"/ProtonGE ]; then
        echo ""
    else
        mkdir -p "${tmp}"/ProtonGE
    fi
    
    cd "${tmp}"/ProtonGE
    # Fix posibles descargas anteriores
    if [ -f "${tmp}"/ProtonGE/Proton-"${Release}".tar.gz ]; then
                if [ -f "${tmp}"/ProtonGE/Proton-"${Release}".sha512sum ]; then
                    rm "${tmp}"/ProtonGE/Proton-"${Release}".sha512sum
                else
                    echo ""
                fi
    
            wget https://github.com/GloriousEggroll/proton-ge-custom/releases/download/"${Release}"/Proton-"${Release}".sha512sum

            sumCheck=$(cat Proton-"${Release}".sha512sum)
            sumFile=$(sha512sum Proton-"${Release}".tar.gz)

                if [ "${sumCheck}" == "${sumFile}" ]; then
	                echo "La descarga es correcta"
	            else
	                echo "LOG: Limpiando cache..."
                    rm "${tmp}"/ProtonGE/Proton-"${Release}".tar.gz
                fi
    else
        echo ""
    fi
    
    wget https://github.com/GloriousEggroll/proton-ge-custom/releases/download/"${Release}"/Proton-"${Release}".sha512sum
    wget https://github.com/GloriousEggroll/proton-ge-custom/releases/download/"${Release}"/Proton-"${Release}".tar.gz

    sumCheck=$(cat Proton-"${Release}".sha512sum)
    sumFile=$(sha512sum Proton-"${Release}".tar.gz)

    if [ "${sumCheck}" == "${sumFile}" ]; then
	        echo "La descarga es correcta"
	else
	        echo "LOG: Limpiando cache..."
            rm "${tmp}"/ProtonGE/Proton-"${Release}".tar.gz
            rm "${tmp}"/ProtonGE/Proton-"${Release}".sha512sum
            _msgCancel
    fi
}

_extractProton(){
    cd "${tmp}"/ProtonGE
    tar -xvf Proton-"${Release}".tar.gz
}
 
# Instala Proton
_installProton(){
    cd "${APPDIR}"
    if [ -d "${HOME}/.local/share/Steam/compatibilitytools.d" ];then
        echo ""
        else
        echo "LOG: Preparando la carpeta de Steam para instalar ProtonGE"
        mkdir -p "${HOME}"/.local/share/Steam/compatibilitytools.d
    fi

    # echo "Has elegido: ${installChoice}"
        if [ ${installChoice} == "Steam|Lutris" ]; then
                mv "${tmp}"/ProtonGE/Proton-"${Release}" "${HOME}"/.local/share/Steam/compatibilitytools.d/Proton-"${Release}"
                ln -s "${HOME}"/.local/share/Steam/compatibilitytools.d/Proton-"${Release}"/files "${HOME}"/.local/share/lutris/runners/wine/Proton-"${Release}" 
        elif [ ${installChoice} == "Steam" ]; then
                mv "${tmp}"/ProtonGE/Proton-"${Release}" "${HOME}"/.local/share/Steam/compatibilitytools.d/Proton-"${Release}"
        elif [ ${installChoice} == "Lutris" ]; then
                # Pendiente de Fixear esto
                mv "${tmp}"/ProtonGE/Proton-"${Release}" "${HOME}"/.local/share/Steam/compatibilitytools.d/Proton-"${Release}"
                ln -s "${HOME}"/.local/share/Steam/compatibilitytools.d/Proton-"${Release}"/files "${HOME}"/.local/share/lutris/runners/wine/Proton-"${Release}" 
        else
                echo "LOG: ERROR No hay nada que hacer, Salir..."
                exit
        fi 

    _msgFinish
}

_msgFinish(){
echo "LOG: Instalación completada!"
if [[ "${desktop_session}" == "GTK" ]]; then
        ####################################################################
        # Zenity GTK
        msgFinish=$(zenity --info --title=" ${APPNAME} - ${APPVERSION} " --width=250 --text="Instalación completada!")
                ans=$?
                    if [ $ans -eq 0 ]; then
                            
                            exit
                        else
                            exit
                        fi
        
        # End Zenity GTK
        ####################################################################            
elif [[ "${desktop_session}" == "QT" ]]; then
        ####################################################################
        # kdialog QT
        echo ""
        # End Kdialog QT
        ####################################################################
elif [[ "${desktop_session}" == "CLI" ]]; then
        ####################################################################
        # Dialog CLI        
        echo ""
        # End Dialog CLI
        ####################################################################
else
    echo "LOG: No se ha detectado el escritorio que estas usando."
fi
} 

_msgUninstall(){
if [[ "${desktop_session}" == "GTK" ]]; then
        msgUninstall=$(zenity --info --title=" ${APPNAME} - ${APPVERSION} " --width=250 --text="¡Desinstalación completada!")
                ans=$?
                    if [ $ans -eq 0 ]; then
                            exit
                        else
                            exit
                        fi
elif [[ "${desktop_session}" == "QT" ]]; then
        ####################################################################
        # kdialog QT
        echo ""
        # End Kdialog QT
        ####################################################################
elif [[ "${desktop_session}" == "CLI" ]]; then
        ####################################################################
        # Dialog CLI        
        echo ""
        # End Dialog CLI
        ####################################################################
else
    echo "LOG: No se ha detectado el escritorio que estas usando."
fi
} 

_msgCancel(){
echo "LOG: Se ha cancelado el proceso."    
if [[ "${desktop_session}" == "GTK" ]]; then
        msgCancel=$(zenity --error --title=" ${APPNAME} - ${APPVERSION} " --width=250 --text="Se ha cancelado el proceso.")
                ans=$?
                    if [ $ans -eq 0 ]; then
                            exit
                        else
                            exit
                        fi
elif [[ "${desktop_session}" == "QT" ]]; then
        ####################################################################
        # kdialog QT
        echo ""
        # End Kdialog QT
        ####################################################################
elif [[ "${desktop_session}" == "CLI" ]]; then
        ####################################################################
        # Dialog CLI        
        echo ""
        # End Dialog CLI
        ####################################################################
else
    echo "LOG: No se ha detectado el escritorio que estas usando."
fi
} 

_msgNoSteam(){
    if [[ "${desktop_session}" == "GTK" ]]; then
        msgCancel=$(zenity --error --title=" ${APPNAME} - ${APPVERSION} " --width=250 --text="No tienes Lutris ni Steam Instalado, se ha cancelado el proceso.")
                ans=$?
                    if [ $ans -eq 0 ]; then
                            exit
                        else
                            exit
                        fi
elif [[ "${desktop_session}" == "QT" ]]; then
        ####################################################################
        # kdialog QT
        echo ""
        # End Kdialog QT
        ####################################################################
elif [[ "${desktop_session}" == "CLI" ]]; then
        ####################################################################
        # Dialog CLI        
        echo ""
        # End Dialog CLI
        ####################################################################
else
    echo "LOG: No se ha detectado el escritorio que estas usando."
fi
} 



# Texto de información o ayuda del programa, Sólo se mostrará si se ejecuta por terminal # hay que arreglar el idioma mostrado.
_help(){
    cat <<EOL
    ProtonGE Installer Script (Version 0.1)
    Author: Ainus64 (Mis Juegos En Linux)

    Use ./ProtonGeInstaller to launch the Graphical Interface

    Options:

    -h / --help / -help  -  Show this text
    -t     -  Launch Terminal Only GUI (WIP)
    -g     -  Launch Installer with GTK GUI
    -k     -  Launch Installer with QT GUI (WIP)
EOL
}

_detectDesktop(){
if [[ "${DESKTOP_SESSION}" == "gnome" ]] || [[ "${DESKTOP_SESSION}" == "cinnamon" ]]  || [[ "${DESKTOP_SESSION}" == "mate" ]] || [[ "${DESKTOP_SESSION}" == "LXDE" ]] || [[ "${DESKTOP_SESSION}" == "budgie-desktop" ]] || [[ "${DESKTOP_SESSION}" == "gnome-xorg" ]] || [[ "${DESKTOP_SESSION}" == "gnome-classic" ]] ; then
        desktop_session="GTK"
        echo "LOG: Cargando la interfaz GTK"

    elif [[ "${desktop_session}" == "plasma" ]] || [[ "${desktop_session}" == "plasmawayland" ]] || [[ "${desktop_session}" == "lxqt" ]]; then
        desktop_session="QT"
        echo "LOG: Cargando la interfaz QT"
    elif [[ "${desktop_session}" == "CLI" ]]; then
        echo "LOG: Cargando la interfaz CLI"
    else
        echo "LOG: Cargando la interfaz por defecto"
fi
    _checkDep
    _mainMenu
}

_detectDesktop