#!/bin/bash
# Program: ProtonGEInstaller
# version: 0.8
# Author: Ainus64 (Mis Juegos En Linux)
# Contacto: ainus64@gmx.com
#
# Dependencias: dialog, zenity, kdialog
#
# Cosas por arreglar:
#                   [ ] Fix para los archivos descargados cancelados.
#                   [X] Fix Carpeta de Steam - ProtonGE no carga enlazandolo a otra carpeta.
#                       Hay que arreglar la ubicación de Proton, una Alternativa es crearla directamente en Steam
#                       y vincular con un enlace la carpeta para Lutris, ya que en Lutris sí funciona la vinculación.
#                   [X] Hay que reescribir el código mejor para ordenarlo, creando un condicional para detectar el escritorio y cargar la GUI.
#                   [ ] Hay que reescribir las variables de la descarga, optimizar el código.
#                       Sugerencia: no hace falta añadir la URL a la base de datos, con el nombre de Proton se puede predecir la URl.
#                                   Además de optimizar el código, se mejoraría la velocidad de actualización de la Base de Datos al omitir la URL.
#                                   Con esto se puede incluir el MD5 para las comprobaciónes de los archivos temporales desvargados.
#                   [ ] Hay que escribir una funcion que detecte si la versión de ProtonGE que has seleccionado ya está instalado.
#                       En tal caso hay que sugerir si quieres eliminarla para proceder a reinstalarla o Cancelar el proceso.
#                   [ ] Hay que cambiar todos los textos al Inglés para internacionalizarlo.
#                   [ ] 1.0 Finalizar el programa con Zenity
#                   [ ] 1.1 Hay que escribir el código de la interfaz por terminal
#                   [ ] 1.2 Hay que escribir el código para la interfaz de Kdialog
#                   [ ] 1.3 Corrección de Bugs
#

# Carga la base de datos.
valor0=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[0].release'`
valor1=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[1].release'`
valor2=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[2].release'`
valor3=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[3].release'`
valor4=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[4].release'`
valor5=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[5].release'`
valor6=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[6].release'`
valor7=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[7].release'`
valor8=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[8].release'`
valor9=`curl -s https://raw.githubusercontent.com/ainus64/protonGE-installer/main/data/db.json | jq -r '.ProtonGE[9].release'`
# Variables de entorno
APPVERSION="v0.8"
APPNAME="ProtonGE-installer"
APPDIR=$(pwd)
tmp="/tmp"

# MENU PRINCIPAL GTK (Gnome, Cinnamon, LXDE or Unknow DE)
_mainMenu(){
    _checkSteam
# Define la sesión de Escritorio que se está ejecutando
desktop_session=$(echo "${DESKTOP_SESSION}")

if [[ "${desktop_session}" == "gnome-xorg" ]] || [[ "${desktop_session}" == "gnome" ]]; then
        echo "Log: Gnome Detectado!"
        ####################################################################
        # Zenity Code for Main Menu GTK        
        componente=$(zenity --list --title=" ${APPNAME} - ${APPVERSION} " --height=300 --width=100 --ok-label="Aceptar" --cancel-label="Cancelar" \
                        --text="Bienvenidos a <b>ProtonGE Installer</b>. \n\nSelecciona la versión que quieres instalar" \
                        --radiolist --column="" --column="ProtonGE Release" \
                        1 "${valor0}" 2 "${valor1}" 3 "${valor2}" 4 "${valor3}" 5 "${valor4}" 6 "${valor5}" 7 "${valor6}" 8 "${valor7}" 9 "${valor8}" 10 "${valor9}")
                        ans=$?
                        if [ $ans -eq 0 ]; then
                            Release="${componente}"
                            echo "Log: Has seleccionado ProtonGE-${Release}"
                                _menu_download
                                _menuInstall
                        else
                            echo "Log: Cancelado."
                            zenity --question --title=" ${APPNAME} - ${APPVERSION} " --width=250 --text="¿Estas seguro de que quieres SALIR?"
                                ans=$?
                                if [ $ans -eq 0 ]
                                    then
                                        echo "Si que quiere salir"
                                        exit
                                else
                                        echo "No quiere Salir"
                                        _mainMenu
                        fi
        
        # Busca la versión de proton seleccionada y le asigna la URL

fi
# End Zenity Code for GTK
####################################################################

elif [[ "${desktop_session}" == "plasmawayland" ]] || [[ "${desktop_session}" == "kde" ]] || [[ "${desktop_session}" == "lxqt" ]]; then
        echo "Log: KDE Detectado!"
        _mainMenu_KDE
elif [[ "${desktop_session}" == "terminal" ]]; then
        echo "Log: Modo Terminal!"
        _mainMenu_Terminal
else
    echo "Log: No se ha detectado el escritorio que estas usando."
fi
} #### <- End MainMenu ###

_menu_download(){
    
    
    # Prepara el directorio de descarga
    mkdir -p "${tmp}"/ProtonGE
    cd "${tmp}"/ProtonGE
    
    # Fix posibles descargas anteriores
    rm "${tmp}"/ProtonGE/*.tar.gz
    
    desktop_session=$(echo "${DESKTOP_SESSION}")

if [[ "${desktop_session}" == "gnome-xorg" ]] || [[ "${desktop_session}" == "gnome" ]]; then
                    # Menu Download GTK
                    echo "Descargando" 
                    (
                    sleep 1
                    echo "10"
                    echo "#\n\n Preparando la descarga"; sleep 1
                    echo "30"
                    echo "# Descargando ProtonGE... \n\n Esto puede tardar un tiempo..."; _downloadProton; sleep 1
                    echo "50"
                    echo "# \n\n Creando enlace de Steam con ProtonGE..."; _extractProton; sleep 1
                    echo "90"
                    echo "#\n\n  ¡Descarga Finalizada!"
                    echo "100"
                    ) |
                    downloadProton=$(zenity --progress --title=" ${APPNAME} - ${APPVERSION} " --height=100 --width=300 \
                    --text="\n\n Iniciando..." --percentage=0)

                    ans=$?
                        if [ $ans -eq 0 ]; then
                          echo "Log: Descarga Finalizada!"
                        else
                            _msgCancel
                        fi
                # End Download code
                ####################################

elif [[ "${desktop_session}" == "plasmawayland" ]] || [[ "${desktop_session}" == "kde" ]] || [[ "${desktop_session}" == "lxqt" ]]; then
        ####################################################################
        # kdialog QT
        echo ""
        # End Kdialog QT
        ####################################################################
else
    echo "Log: No se ha detectado el escritorio que estas usando, Usar CLI"
fi
} #### <- End MainMenu ###

_menuInstall(){
    desktop_session=$(echo "${DESKTOP_SESSION}")

if [[ "${desktop_session}" == "gnome-xorg" ]] || [[ "${desktop_session}" == "gnome" ]]; then
            if [[ ${STEAM} == true ]] && [[ ${LUTRIS} == true ]]; then
                ##########################################
                # Menu Install Steam And Lutris GTK
                installChoice=$(zenity --list --title=" ${APPNAME} - ${APPVERSION} " --height=300 --width=200 --ok-label="Aceptar" --cancel-label="Cancelar" \
                                --text="Elije donde quieres instalarlo ahora." \
                                --checklist --column="" --column="Opciones:" \
                                1 "Steam" 2 "Lutris")
                            ans=$?
                            if [ $ans -eq 0 ]; then
                                _installProton
                            else
                                _msgCancel
                            fi
                # End code Install Steam And Lutris code
                ##########################################
            elif [[ ${STEAM} == true ]] && [[ ${LUTRIS} == false ]]; then
                ##########################################
                # Menu Install Solo Steam GTK
                installChoice=$(zenity --list --title=" ${APPNAME} - ${APPVERSION} " --height=300 --width=200 --ok-label="Aceptar" --cancel-label="Cancelar" \
                                --text="Elije donde quieres instalarlo ahora." \
                                --checklist --column="" --column="Opciones:" \
                                1 "Steam" )
                            ans=$?
                            if [ $ans -eq 0 ]; then
                                _installProton
                            else
                                _msgCancel
                            fi
                # End code Install Solo Steam
                ##########################################

            elif [[ ${STEAM} = false ]] && [[ ${LUTRIS} = true ]]; then
                ##########################################
                # Menu Install Solo Steam GTK
                installChoice=$(zenity --list --title=" ${APPNAME} - ${APPVERSION} " --height=300 --width=200 --ok-label="Aceptar" --cancel-label="Cancelar" \
                                --text="Elije donde quieres instalarlo ahora." \
                                --checklist --column="" --column="Opciones:" \
                                1 "Lutris" )
                            ans=$?
                            if [ $ans -eq 0 ]; then
                                _installProton
                            else
                                _msgCancel
                            fi
                # End code Install Solo Steam
                ##########################################
            else
                _msgNothing
            fi
            # End Installer Code
            ####################################################       
elif [[ "${desktop_session}" == "plasmawayland" ]] || [[ "${desktop_session}" == "kde" ]] || [[ "${desktop_session}" == "lxqt" ]]; then
        ####################################################################
        # kdialog QT
        echo ""
        # End Kdialog QT
        ####################################################################
elif [[ "${desktop_session}" == "terminal" ]]; then
        ####################################################################
        # Dialog CLI        
        echo ""
        # End Dialog CLI
        ####################################################################
else
    echo "Log: No se ha detectado el escritorio que estas usando."
fi
} #### <- End MainMenu ###

_downloadProton(){
    wget https://github.com/GloriousEggroll/proton-ge-custom/releases/download/"${Release}"/Proton-"${Release}".tar.gz
    wget https://github.com/GloriousEggroll/proton-ge-custom/releases/download/"${Release}"/Proton-"${Release}".sha512sum
}
_extractProton(){
    # Comprobar
    # tar -xvf Proton-"${Release}".tar.gz
}
 
# Instala Proton
_installProton(){
    cd "${APPDIR}"
    if [ -d "${HOME}/.local/share/Steam/compatibilitytools.d" ];then
        echo ""
    else
        echo "Log: Preparando la carpeta de Steam para instalar ProtonGE"
        mkdir -p "${HOME}"/.local/share/Steam/compatibilitytools.d
    fi

    echo "Has elegido: ${installChoice}"
        if [ ${installChoice} == "Steam|Lutris" ]; then
                mv "${tmp}"/ProtonGE/Proton-"${Release}" "${HOME}"/.local/share/Steam/compatibilitytools.d/Proton-"${Release}"
                ln -s "${HOME}"/.local/share/Steam/compatibilitytools.d/Proton-"${Release}"/files "${HOME}"/.local/share/lutris/runners/wine/Proton-"${Release}" 
        elif [ ${installChoice} == "Steam" ]; then
                mv "${tmp}"/ProtonGE/Proton-"${Release}" "${HOME}"/.local/share/Steam/compatibilitytools.d/Proton-"${Release}"
        elif [ ${installChoice} == "Lutris" ]; then
                # Pendiente de Fixear esto
                mv "${tmp}"/ProtonGE/Proton-"${Release}" "${HOME}"/.local/share/Steam/compatibilitytools.d/Proton-"${Release}"
                ln -s "${HOME}"/.local/share/Steam/compatibilitytools.d/Proton-"${Release}"/files "${HOME}"/.local/share/lutris/runners/wine/Proton-"${Release}" 
        else
                echo "No hay nada que hacer, Salir."
                rm "${tmp}"/ProtonGE/*.tar.gz*
                exit
        fi 


    # Clean folder
    rm "${tmp}"/ProtonGE/*.tar.gz*
    
    _menu_finish
}

_menu_finish(){
    desktop_session=$(echo "${DESKTOP_SESSION}")

if [[ "${desktop_session}" == "gnome-xorg" ]] || [[ "${desktop_session}" == "gnome" ]]; then
        ####################################################################
        # Zenity GTK
        zenity --info --title=" ${APPNAME} - ${APPVERSION} " --width=250 --text="Instalación completada!"
        # End Zenity GTK
        ####################################################################            
elif [[ "${desktop_session}" == "plasmawayland" ]] || [[ "${desktop_session}" == "kde" ]] || [[ "${desktop_session}" == "lxqt" ]]; then
        ####################################################################
        # kdialog QT
        echo ""
        # End Kdialog QT
        ####################################################################
elif [[ "${desktop_session}" == "terminal" ]]; then
        ####################################################################
        # Dialog CLI        
        echo ""
        # End Dialog CLI
        ####################################################################
else
    echo "Log: No se ha detectado el escritorio que estas usando."
fi
} #### <- End MainMenu ###

_msgCancel(){
    pkill wget
    rm "${HOME}"/.local/share/ProtonGE/*.tar.gz*
    
    desktop_session=$(echo "${DESKTOP_SESSION}")

if [[ "${desktop_session}" == "gnome-xorg" ]] || [[ "${desktop_session}" == "gnome" ]]; then
        ####################################################################
        # Zenity GTK
        zenity --error --title=" ${APPNAME} - ${APPVERSION} " --width=250 --text="Se ha cancelado el proceso"
        # End Zenity GTK
        ####################################################################            
elif [[ "${desktop_session}" == "plasmawayland" ]] || [[ "${desktop_session}" == "kde" ]] || [[ "${desktop_session}" == "lxqt" ]]; then
        ####################################################################
        # kdialog QT
        echo ""
        # End Kdialog QT
        ####################################################################
elif [[ "${desktop_session}" == "terminal" ]]; then
        ####################################################################
        # Dialog CLI        
        echo ""
        # End Dialog CLI
        ####################################################################
else
    echo "Log: No se ha detectado el escritorio que estas usando."
fi
} #### <- End MainMenu ###

_msgNothing(){
    if [[ "${desktop_session}" == "gnome-xorg" ]] || [[ "${desktop_session}" == "gnome" ]]; then
        ####################################################################
        # Zenity GTK
        zenity --error --title=" ${APPNAME} - ${APPVERSION} " --width=250 --text="No tienes Lutris ni Steam Instalado, se ha cancelado el proceso."
        # End Zenity GTK
        ####################################################################            
elif [[ "${desktop_session}" == "plasmawayland" ]] || [[ "${desktop_session}" == "kde" ]] || [[ "${desktop_session}" == "lxqt" ]]; then
        ####################################################################
        # kdialog QT
        echo ""
        # End Kdialog QT
        ####################################################################
elif [[ "${desktop_session}" == "terminal" ]]; then
        ####################################################################
        # Dialog CLI        
        echo ""
        # End Dialog CLI
        ####################################################################
else
    echo "Log: No se ha detectado el escritorio que estas usando."
fi
} #### <- End MainMenu ###


_checkSteam(){
    # Comprueba que existe la carpeta de Steam
    if [ -d "${HOME}/.steam" ]; then
            echo "Log: Steam detectado!"
            STEAM="true"
        else
            STEAM="false"
    fi

    if [ -d "${HOME}/.local/share/lutris" ]; then
            echo "Log: Lutris detectado!"
            LUTRIS="true"
        else
            LUTRIS="false"
    fi
}


# Texto de información o ayuda del programa, Sólo se mostrará si se ejecuta por terminal # hay que arreglar el idioma mostrado.
_help(){
    cat <<EOL
    ProtonGE Installer Script (Version 0.1)
    Author: Ainus64 (Mis Juegos En Linux)

    Use ./ProtonGeInstaller to launch the Graphical Interface

    Options:

    -h / --help / -help  -  Show this text
    -t     -  Launch Terminal Only GUI (WIP)
    -g     -  Launch Installer with GTK GUI
    -k     -  Launch Installer with QT GUI (WIP)
EOL
}

_mainMenu